#!/bin/sh
###
# $Revision: 1.1.1.1 $
# $Date: 2001/03/19 01:59:50 $
#
# Configure script for Count 1.2
# muquit@semcor.com
# November 23, 1995
#
# This script generates the following files from user input
#   config.h
#   Makefile
#   combine/Makefile
#
# wrote this script with bash functions, then realized it will  not be very
# portable.. rewrote: Nov 25, 1995
#
###

trap 'echo '';echo "Interrupt detected..exiting";rm -f "./Config.tmpl" 2>/dev/null;rm -f "./.alfcf" ;rm -f "./strict" 2>/dev/null;echo '';exit 1' 1 2 3 15

Tmpl="./Config.tmpl"
CgiBinDir="/usr/local/etc/httpd/cgi-bin"

if [ ! -f "./VERSION" ] 
then
cat << EOV

        The file ./VERSION does not exist!
        aborting!

EOV
        exit 1
fi

AUTHOR="ma_muquit@fccc.edu"
Version=`cat ./VERSION`
ConfigH="src/config.h"
BaseDir="/usr/local/etc/Counter"
ConfigDir="$BaseDir/conf"
ConfFile="count.cfg"
DigitDir="$BaseDir/digits"
DataDir="$BaseDir/data"
LogDir="$BaseDir/logs"
ext=`echo $Version | sed 's/\./_/g'`
LogFile="Count$ext.log"
RgbFile="./data/rgb.txt"

##
# cleanup
###
if [ -f "./config.h" ]
then
    rm -f "./config.h"
fi

echo "Your configuration:"
echo "----------------------------------------------------------------"
    echo "CgiBinDir=$CgiBinDir"
    echo "BaseDir= $BaseDir"
    echo "DigitDir=$DigitDir"
    echo "ConfDir= $ConfigDir"
    echo "ConfFile=$ConfFile"
    echo "DataDir=$DataDir"
    echo "LogDir=$LogDir"
    echo "LogFile=$LogFile"
echo "----------------------------------------------------------------"

###
# create header file --starts
###
d=`date`
cat <<EOH>$ConfigH
#ifndef COUNT_CONFIG_H
#define COUNT_CONFIG_H 1

/*
** This file is automatically generated by the Count-config script 
** Count-config
** Counter Version: $Version by $AUTHOR
** created on: $d
**
**  If you edit this file, you better make sure you know what your are doing 
*/
EOH
echo "#define CONFIG_DIR  \"$ConfigDir\"" >> $ConfigH
echo "#define CONFIG_FILE \"$ConfFile\"" >> $ConfigH
echo "#define DATA_DIR    \"$DataDir\"" >> $ConfigH
echo "#define DIGIT_DIR   \"$DigitDir\"" >> $ConfigH
echo "#define LOG_DIR     \"$LogDir\"" >> $ConfigH
echo "#define LOG_FILE    \"$LogFile\"" >> $ConfigH

cat<<EOX>>$ConfigH

/*****************************************************************************
* Defaults parameters not supplied in calling.
* Change em here if you insist...
*****************************************************************************/
/*
** Max digitis in output 
*/
#define DEFAULT_MAXDIGITS           6

/*
** left padding with zeros, 0 indicates no left padding
*/
#define DEFAULT_LEFTPAD             True

/*
** Default frame thickness, 0 indicates no frame
*/
#define DEFAULT_FRAME_THICKNESS     5

/*
** default frame color is #a7c2ed
*/
#define DEFAULT_FRAME_RED           100
#define DEFAULT_FRAME_GREEN         139
#define DEFAULT_FRAME_BLUE          216

/*
** default opaque color. Do not change this.
*/
#define DEFAULT_OPAQUE_RED          0
#define DEFAULT_OPAQUE_GREEN        255
#define DEFAULT_OPAQUE_BLUE         0

/*
** default pen color
*/
#define DEFAULT_PEN_RED             255
#define DEFAULT_PEN_GREEN           119
#define DEFAULT_PEN_BLUE            0
/*
** use this ft if we get frgb only
*/
#define FRGB_IMPLIED_FT             4

/*
** default transpareny
*/
#define DEFAULT_TRANSPARENCY        False

/*
** default transparent color is black
*/
#define DEFAULT_TRANSPARENT_RED     0
#define DEFAULT_TRANSPARENT_GREEN   0
#define DEFAULT_TRANSPARENT_BLUE    0

/*
** use this tr, if we get trgb only
*/
#define TRGB_IMPLIED_TR             1

/*
** default initial counter value
*/
#define DEFAULT_STARTCOUNT          1

/*
** show count or not
*/
#define DEFAULT_SHOWCOUNT           1

/*
** this df means, use rand 
*/
#define DF_FOR_RANDOM               "RANDOM"

/*
** make rand the default too
*/
#define DEFAULT_DATAFILE            "RANDOM"

/*
** default digit style, my green LED, digits/A
*/
#define DEFAULT_DIGITS_STYLE        "A"

/*
** & or | separate params
*/
#define PARAM_DELIMITERS            "|&"

/*
** This specifies a file listing RGB values mapped to names.
** If not defined, no attempt to use RGB names is made.  If you are not sure,   
** just leave this be--it is okay if the file does not exist.
**
** When RGB_MAPPING_ISERROR is set to 1, an error is returned when RGB name
** value is used, but it shows the corresponding RGB triplet.  This is done
** so RGB names can be looked up, but yet not allow users to make constant
** use of this very ineffiecient lookup.
*/
#define RGB_MAPPING_DICT            "$BaseDir/rgb.txt"
EOX

cat<<EOXXX>>$ConfigH
/*
** End of parameter defaults
*/
#endif /* COUNT_CONFIG_H*/
EOXXX

###
# create header file --ends
###
##
# create template for install program --starts
##
echo "creating variables template file $Tmpl for the install program.."

echo "CGIBIN_DIR=\"\$MY_DEB_DESTDIR$CgiBinDir\"" > $Tmpl

echo "BASE_DIR=\"\$MY_DEB_DESTDIR$BaseDir\"" >> $Tmpl
echo "CONFIG_FILE=\"\$MY_DEB_DESTDIR$ConfFile\"" >> $Tmpl
echo "CONFIG_DIR=\"\$MY_DEB_DESTDIR$ConfigDir\"" >> $Tmpl
echo "DIGIT_DIR=\"\$MY_DEB_DESTDIR$DigitDir\"" >> $Tmpl
echo "DATA_DIR=\"\$MY_DEB_DESTDIR$DataDir\"" >> $Tmpl
echo "LOG_DIR=\"\$MY_DEB_DESTDIR$LogDir\"" >> $Tmpl
echo "LOG_FILE=\"\$MY_DEB_DESTDIR$LogFile\"" >> $Tmpl
echo "RGB_FILE=\"\$MY_DEB_DESTDIR$RgbFile\"" >> $Tmpl
echo "RGB_DIR=\"\$MY_DEB_DESTDIR$BaseDir\"" >> $Tmpl
##
# create template for install program --ends
##
# End of configuration script
